"use strict";function notification(event,peer1,peer2){var e=function(message,color){this.message=message,this.color=color},trigger={videoAdded:new e(peer1+" has joined the room","green"),videoRemoved:new e(peer1+" has left the room","red"),changeName:new e(peer1+" changes their name to "+peer2,"blue"),lockRoom:new e("Room is now locked","green"),unlockRoom:new e("Room is now unlocked","red"),successfulCopy:new e("Copying command was successful . Link has been saved to clipboard. Send it to your friend to start group chat","blue"),unsuccessfulCopy:new e("Copying command was unsuccessful. Use manual copy + paste to send the link to your friends.","red")},noti=$("<div class='noti "+trigger[event].color+"'>"+trigger[event].message+"</div>");$("#notification").append(noti);noti.fadeIn(250),setTimeout(function(){noti.fadeOut(250)},5e3)}var lamkRTC=angular.module("LamkRTC",["ngRoute","ngClickCopy"]);lamkRTC.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{templateUrl:"app/components/home/view.html",controller:"mainController"}).when("/:roomName",{templateUrl:"app/components/room/view.html",controller:"roomController"}),$locationProvider.html5Mode(!0)}),lamkRTC.controller("controller",function($scope){}),lamkRTC.controller("mainController",function($scope,$location){$scope.hostname=$location.absUrl(),$scope.createRoom=function(){$location.path("/"+$scope.roomName)}}),lamkRTC.controller("roomController",function($rootScope,$scope,$routeParams,$location){var room=$routeParams.roomName,webrtc=new SimpleWebRTC({localVideoEl:"localVideo",remoteVideosEl:"",autoRequestMedia:!0,url:"https://hieudoan.com:9999",debug:!1,detectSpeakingEvents:!0,autoAdjustMic:!1});webrtc.on("readyToCall",function(){room&&webrtc.joinRoom(room)}),webrtc.on("localStream",function(stream){var video=stream.getVideoTracks()[0];$("button[name='video']").click(function(){video.enabled=!video.enabled,$("button[name='video']").toggleClass("btn-success").toggleClass("btn-danger"),$("button[name='video'] i").toggleClass("fa-video-camera").toggleClass("fa-pause"),$("#video i").toggleClass("fa-video-camera").toggleClass("fa-pause")});var audio=stream.getAudioTracks()[0];$("button[name='audio']").click(function(){audio.enabled=!audio.enabled,$("button[name='audio']").toggleClass("btn-success").toggleClass("btn-danger"),$("button[name='audio'] i").toggleClass("fa-microphone").toggleClass("fa-microphone-slash"),$("#audio i").toggleClass("fa-microphone").toggleClass("fa-microphone-slash")})}),webrtc.on("localMediaError",function(err){alert("Can't get access to camera")}),webrtc.on("videoAdded",function(video,peer){console.log("video added",peer),notification("videoAdded",void 0!==peer.nick?peer.nick:peer.id);var remotes=document.getElementById("remotes");if(remotes){var container=document.createElement("div");if(container.className="col-sm-6",container.id="container_"+webrtc.getDomId(peer),container.appendChild(video),peer&&peer.pc){var connstate=document.createElement("div");connstate.className="connectionstate text-center",container.appendChild(connstate),peer.pc.on("iceConnectionStateChange",function(event){switch(peer.pc.iceConnectionState){case"checking":connstate.innerText="Connecting to peer...";break;case"connected":case"completed":connstate.innerText="Connection established.","Input your username"!=$scope.nick&&webrtc.sendDirectlyToAll(room,"nick",$scope.nick);break;case"disconnected":connstate.innerText="Disconnected.";break;case"failed":connstate.innerText="Connection failed.";break;case"closed":connstate.innerText="Connection closed."}})}remotes.appendChild(container)}}),webrtc.on("videoRemoved",function(video,peer){console.log("video removed ",peer),notification("videoRemoved",void 0!==peer.nick?peer.nick:peer.id);var remotes=document.getElementById("remotes"),el=document.getElementById(peer?"container_"+webrtc.getDomId(peer):"localScreenContainer");remotes&&el&&remotes.removeChild(el)}),webrtc.on("iceFailed",function(peer){var connstate=document.querySelector("#container_"+webrtc.getDomId(peer)+" .connectionstate");console.log("local fail",connstate),connstate&&(connstate.innerText="Connection failed.",fileinput.disabled="disabled")}),webrtc.on("connectivityError",function(peer){var connstate=document.querySelector("#container_"+webrtc.getDomId(peer)+" .connectionstate");console.log("remote fail",connstate),connstate&&(connstate.innerText="Connection failed.",fileinput.disabled="disabled")}),$scope.url=$location.$$absUrl,$scope.sendMessage=function(){var id=$(".mes.active").attr("id");console.log(),webrtc.sendDirectlyToAll(room,"chat",$scope.message),"me"!=id&&($(".mes.active").removeClass("active"),$("#conversation").append("<div id='me' class='mes me active'><p class='from'>Me</p><p class='content'></p></div>")),$(".mes.active .content").append($scope.message+"<br>"),$scope.message=""},$scope.nick="Input your username",$scope.editing=!1,$scope.setNick=function(){webrtc.sendDirectlyToAll(room,"nick",$scope.nick)},$scope.editItem=function(){$scope.editing=!0,$scope.nick=""},$scope.doneEditing=function(){$scope.editing=!1,"Input your username"!=$scope.nick&&""!=$scope.nick?webrtc.sendDirectlyToAll(room,"nick",$scope.nick):""==$scope.nick&&($scope.nick="Input your username")},webrtc.on("channelMessage",function(peer,label,data){if("chat"===data.type){var id=peer.id,activeID=$(".mes.active").attr("id"),from=void 0===peer.nick?id:peer.nick;activeID!=id?($(".mes.active").removeClass("active"),$("#conversation").append("<div id='"+id+"' class='mes other active'><p class='from'>"+from+"</p><p class='content'>"+data.payload+"<br></p></div>")):$(".mes.active .content").append(data.payload+"<br>")}else"nick"===data.type?(notification("changeName",from=void 0!==peer.nick?peer.nick:peer.id,data.payload),peer.nick=data.payload):"lockStatus"===data.type&&("true"==data.payload?$("button[name='lock'] i").toggleClass("fa-lock").toggleClass("fa-unlock"):$("button[name='lock'] i").toggleClass("fa-unlock").toggleClass("fa-lock"))}),$scope.leave=function(){webrtc.stopLocalVideo(),webrtc.leaveRoom(),webrtc.disconnect(),$location.path("/")};var peers=[];webrtc.on("createdPeer",function(peer){console.log("createdPeer",peer);var remotes=document.getElementById("remotes");console.log(peer),peers.push(peer),console.log(peers),remotes&&(peer&&peer.pc&&peer.pc.on("iceConnectionStateChange",function(event){var state=peer.pc.iceConnectionState;switch(console.log("state",state),state){case"checking":case"connected":case"completed":case"disconnected":case"failed":break;case"closed":var index=peers.indexOf(peer);index>-1&&peers.splice(index,1),console.log(peers)}}),peer.on("fileTransfer",function(metadata,receiver){console.log("incoming filetransfer",metadata),receiver.on("receivedFile",function(file,metadata){console.log("received file",metadata.name,metadata.size),$("#conversation").append("<p class='file'>You just received a file named '"+metadata.name+"'</p><a href='"+URL.createObjectURL(file)+"' download='"+metadata.name+"'>Download</a>"),receiver.channel.close()}),$(".mes.active").removeClass("active")}))});var fileToAll=document.getElementById("fileToAll");fileToAll.addEventListener("change",function(){var file=fileToAll.files[0];console.log(file);var i=0;for(console.log(peers),i;i<peers.length;i++)peers[i].sendFile(file);$("#conversation").append("<p class='file'>You just send a file named '"+file.name+"'</p><a href='"+URL.createObjectURL(file)+"' download='"+file.name+"'>Download</a>"),$(".mes.active").removeClass("active")})}),angular.module("ngClickCopy",[]).service("ngCopy",["$window",function($window){var body=angular.element($window.document.body),textarea=angular.element("<textarea/>");return textarea.css({position:"fixed",opacity:"0"}),{CopyToClipBoard:function(toCopy){textarea.val(toCopy),body.append(textarea),textarea[0].select();try{var msg=document.execCommand("copy")?"successful . Link has been saved to clipboard. Send it to your friend to start group chat":"unsuccessful. Use manual copy + paste to send the link to your friends.";alert("Copying command was "+msg)}catch(err){alert("Copy to clipboard: Ctrl+C, Enter",toCopy)}textarea.remove()}}}]).directive("ngClickCopy",["ngCopy",function(ngCopy){return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(e){ngCopy.CopyToClipBoard(attrs.ngClickCopy)})}}}]);